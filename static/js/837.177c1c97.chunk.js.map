{"version":3,"file":"static/js/837.177c1c97.chunk.js","mappings":"qRAuGA,EA7EoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAUN,EAAAA,EAAAA,IAAYO,EAAAA,IACtBC,GAAUR,EAAAA,EAAAA,IAAYS,EAAAA,IAC5BC,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,OACTpB,GAASqB,EAAAA,EAAAA,MACX,GAAG,CAACrB,IAEJ,IAMMsB,EACJX,EAAQY,OAASZ,EAAQa,OAASb,EAAQc,YAAcd,EAAQe,YAC5DC,EAAAA,EAAAA,GAAwBlB,EAASE,GACjCT,GAENiB,EAAAA,EAAAA,YAAU,YAENR,EAAQY,OACRZ,EAAQa,OACRb,EAAQc,YACRd,EAAQe,aAERE,EAAAA,OAAOC,QAAQ,SAADC,OAAUR,EAAYS,OAAM,WAG9C,GAAG,CAACT,EAAYS,SAEhB,IAAMC,EAAaV,EAAYS,OAAS,EAElCE,EACJX,EAAYS,OAAS,IAAMxB,KAAee,EAAYS,OAAS,IAEjE,OACEG,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,EACN5B,IAAcF,IAAS6B,EAAAA,EAAAA,KAACI,EAAAA,EAAW,IAEpCN,IACCE,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAJ,SACTb,EAAYkB,KAAI,SAACC,GAAG,OACnBP,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,CAACD,IAAKA,KADPA,EAAIE,GAER,MAKVpC,IAAcF,IACb6B,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CAAAT,SAAC,4BAGb5B,IAAcF,IAAU2B,IACxBE,EAAAA,EAAAA,KAACW,EAAAA,GAAY,CAAAV,SAAC,yCAGfF,IACCC,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CAACC,KAAK,SAASC,QApDZ,WACrBhD,GAASiD,EAAAA,EAAAA,IAAkBhC,IAC3BC,GAAe,SAACgC,GAAQ,OAAKA,EAAW,CAAC,GAC3C,EAiD2Df,SAAC,cAKrD9B,IAAS6B,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CAAAT,SAAE9B,QAIhC,C","sources":["pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectItemLimitCars,\n  selectIsLoading,\n  selectError,\n  selectAllCars,\n  selectFilters,\n} from \"../../redux/selectors\";\nimport {\n  fetchLimitCars,\n  fetchLoadMoreCars,\n  fetchAllCars,\n} from \"../../redux/carsOperations\";\nimport CarCard from \"../../components/CarCard\";\nimport FiltersForm from \"../../components/FiltersForm\";\nimport getVisibleCarsByFilters from \"../../helpers/getVisibleCarsByFilters\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport {\n  Container,\n  CatalogList,\n  BtnLoadMore,\n  TextLoading,\n  TextSkeleton,\n} from \"./CatalogPage.styled\";\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const itemLimitCars = useSelector(selectItemLimitCars);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const allCars = useSelector(selectAllCars);\n  const filters = useSelector(selectFilters);\n  const [currentPage, setCurrentPage] = useState(2);\n\n  useEffect(() => {\n    dispatch(fetchLimitCars());\n    dispatch(fetchAllCars());\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    dispatch(fetchLoadMoreCars(currentPage));\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  // Якщо є хоча б один фільтр - getVisibleCarsByFilters(), інакше рендеримо itemLimitCars (12 карток)\n  const visibleCars =\n    filters.brand || filters.price || filters.minMileage || filters.maxMileage\n      ? getVisibleCarsByFilters(allCars, filters)\n      : itemLimitCars;\n  \n  useEffect(() => {\n    if (\n      filters.brand ||\n      filters.price ||\n      filters.minMileage ||\n      filters.maxMileage\n    ) {\n      Notify.success(`Found ${visibleCars.length} car(s)`);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visibleCars.length]);\n\n  const isShowList = visibleCars.length > 0;\n\n  const isShowButton =\n    visibleCars.length > 0 && !isLoading && !(visibleCars.length % 12);\n\n  return (\n    <section>\n      <Container>\n        {!isLoading && !error && <FiltersForm />}\n\n        {isShowList && (\n          <CatalogList>\n            {visibleCars.map((car) => (\n              <li key={car.id}>\n                <CarCard car={car} />\n              </li>\n            ))}\n          </CatalogList>\n        )}\n\n        {isLoading && !error && (\n          <TextLoading>Request in progress...</TextLoading>\n        )}\n\n        {!isLoading && !error && !isShowList && (\n          <TextSkeleton>No cars found with selected filters.</TextSkeleton>\n        )}\n\n        {isShowButton && (\n          <BtnLoadMore type=\"button\" onClick={handleLoadMore}>\n            Load more\n          </BtnLoadMore>\n        )}\n\n        {error && <TextLoading>{error}</TextLoading>}\n      </Container>\n    </section>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","itemLimitCars","useSelector","selectItemLimitCars","error","selectError","isLoading","selectIsLoading","allCars","selectAllCars","filters","selectFilters","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","useEffect","fetchLimitCars","fetchAllCars","visibleCars","brand","price","minMileage","maxMileage","getVisibleCarsByFilters","Notify","success","concat","length","isShowList","isShowButton","_jsx","children","_jsxs","Container","FiltersForm","CatalogList","map","car","CarCard","id","TextLoading","TextSkeleton","BtnLoadMore","type","onClick","fetchLoadMoreCars","prevPage"],"sourceRoot":""}