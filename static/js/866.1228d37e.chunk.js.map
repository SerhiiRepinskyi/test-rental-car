{"version":3,"file":"static/js/866.1228d37e.chunk.js","mappings":"mRAEaA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uIAUtBC,EAAmBJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yGAO3BI,GAAeP,EAAAA,EAAAA,IAAOI,EAAPJ,CAAwBQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gCAIvCM,GAAqBT,EAAAA,EAAAA,IAAOI,EAAPJ,CAAwBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gC,mBC4D1D,EAnEsB,WACpB,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,KAE5BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,OAEmB,IAAxBN,EAAaO,OACfC,EAAAA,OAAOC,QAAQ,kCACkB,IAAxBT,EAAaO,OACtBC,EAAAA,OAAOC,QAAQ,QAADC,OAASV,EAAaO,OAAM,4BAE1CC,EAAAA,OAAOC,QAAQ,GAADC,OAAIV,EAAaO,OAAM,4BAEzC,GAAG,CAACT,EAAUE,IAGd,IAAMW,EACJR,EAAQS,OAAST,EAAQU,OAASV,EAAQW,YAAcX,EAAQY,YAC5DC,EAAAA,EAAAA,GAAwBhB,EAAcG,GACtCH,GAENK,EAAAA,EAAAA,YAAU,YAENF,EAAQS,OACRT,EAAQU,OACRV,EAAQW,YACRX,EAAQY,aAERP,EAAAA,OAAOC,QAAQ,SAADC,OAAUC,EAAoBJ,OAAM,WAGtD,GAAG,CAACI,EAAoBJ,SAExB,IAAMU,EAAiBjB,EAAaO,OAAS,EACvCW,EAAqBP,EAAoBJ,OAAS,EAExD,OACEY,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAACnC,EAAS,CAAAkC,SAAA,CACPH,GACCE,EAAAA,EAAAA,KAACG,EAAAA,EAAW,KAEZH,EAAAA,EAAAA,KAACzB,EAAY,CAAA0B,SAAC,oCAGfF,IACCC,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAAAH,SACTT,EAAoBa,KAAI,SAACC,GAAG,OAC3BN,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACO,EAAAA,EAAO,CAACD,IAAKA,KADPA,EAAIE,GAER,OAKTT,GAAsBD,IACtBE,EAAAA,EAAAA,KAACvB,EAAkB,CAAAwB,SAAC,6CAO9B,C","sources":["pages/FavoritesPage/FavoritesPage.styled.jsx","pages/FavoritesPage/FavoritesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0px 8px 150px;\n\n  text-align: center;\n\n  // outline: 2px solid red;\n`;\n\nexport const BaseTextSkeleton = styled.p`\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: calc(24 / 18);\n`;\n\nexport const TextSkeleton = styled(BaseTextSkeleton)`\n  margin-top: 270px;\n`;\n\nexport const TextSkeletonFilter = styled(BaseTextSkeleton)`\n  margin-top: 120px;\n`;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFavoriteCars } from \"../../redux/selectors\";\nimport CarCard from \"../../components/CarCard\";\nimport FiltersForm from \"../../components/FiltersForm\";\nimport { selectFilters } from \"../../redux/selectors\";\nimport { fetchAllCars } from \"../../redux/carsOperations\";\nimport getVisibleCarsByFilters from \"../../helpers/getVisibleCarsByFilters\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport {\n  Container,\n  TextSkeleton,\n  TextSkeletonFilter,\n} from \"./FavoritesPage.styled\";\nimport { CatalogList } from \"../CatalogPage/CatalogPage.styled\";\n\nconst FavoritesPage = () => {\n  const dispatch = useDispatch();\n  const favoriteCars = useSelector(selectFavoriteCars);\n  const filters = useSelector(selectFilters);\n\n  useEffect(() => {\n    dispatch(fetchAllCars());\n\n    if (favoriteCars.length === 0) {\n      Notify.success(`There are no favorite cars yet`);\n    } else if (favoriteCars.length === 1) {\n      Notify.success(`Only ${favoriteCars.length} car added to favorites`);\n    } else {\n      Notify.success(`${favoriteCars.length} cars added to favorites`);\n    }\n  }, [dispatch, favoriteCars]);\n\n  // Якщо є хоча б один фільтр - getVisibleCarsByFilters(), інакше рендеримо favoriteCars\n  const visibleFavoriteCars =\n    filters.brand || filters.price || filters.minMileage || filters.maxMileage\n      ? getVisibleCarsByFilters(favoriteCars, filters)\n      : favoriteCars;\n\n  useEffect(() => {\n    if (\n      filters.brand ||\n      filters.price ||\n      filters.minMileage ||\n      filters.maxMileage\n    ) {\n      Notify.success(`Found ${visibleFavoriteCars.length} car(s)`);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visibleFavoriteCars.length]);\n\n  const isFavoriteCars = favoriteCars.length > 0;\n  const isShowFavoriteList = visibleFavoriteCars.length > 0;\n\n  return (\n    <section>\n      <Container>\n        {isFavoriteCars ? (\n          <FiltersForm />\n        ) : (\n          <TextSkeleton>There are no favorite cars yet.</TextSkeleton>\n        )}\n\n        {isShowFavoriteList && (\n          <CatalogList>\n            {visibleFavoriteCars.map((car) => (\n              <li key={car.id}>\n                <CarCard car={car} />\n              </li>\n            ))}\n          </CatalogList>\n        )}\n\n        {!isShowFavoriteList && isFavoriteCars && (\n          <TextSkeletonFilter>\n            No cars found with selected filters.\n          </TextSkeletonFilter>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","BaseTextSkeleton","p","_templateObject2","TextSkeleton","_templateObject3","TextSkeletonFilter","_templateObject4","dispatch","useDispatch","favoriteCars","useSelector","selectFavoriteCars","filters","selectFilters","useEffect","fetchAllCars","length","Notify","success","concat","visibleFavoriteCars","brand","price","minMileage","maxMileage","getVisibleCarsByFilters","isFavoriteCars","isShowFavoriteList","_jsx","children","_jsxs","FiltersForm","CatalogList","map","car","CarCard","id"],"sourceRoot":""}